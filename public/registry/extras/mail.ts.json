{
  "name": "mail.ts",
  "files": [
    {
      "name": "twoFactorAuth",
      "imports": "import { twoFactorTemplate } from \"./constant\";\r\n",
      "content": "export const sendTwoFactorTokenEmail = async (\r\n  name: string,  \r\n  email: string,\r\n  token: string\r\n) => {\r\n  const html = renderTemplate(twoFactorTemplate, { name, token });\r\n  await resend.emails.send({\r\n    from: \"onboarding@resend.dev\",\r\n    to: email,\r\n    subject: \"Login OTP for Auth Rush\",\r\n    html\r\n  });\r\n};",
      "comment": "//[TwoFactorMailResend]"
    },

    {
      "name": "twoFactorAuth",
      "imports": "import { twoFactorTemplate } from \"./constant\";\r\n",
      "content": "export const sendTwoFactorTokenEmail = async (\r\n  name: string,\r\n  email: string,\r\n  token: string,\r\n) => {\r\n  const html = renderTemplate(twoFactorTemplate, { name, token });\r\n  const mailOptions = {\r\n    from: senderMail,\r\n    to: email,\r\n    subject: \"2FA Code\",\r\n    html,\r\n  };\r\n  await new Promise((resolve, reject) => {\r\n    transporter.sendMail(mailOptions, (error: any, info: any) => {\r\n      if (error) {\r\n        console.error(error);\r\n        reject(error);\r\n      } else {\r\n        resolve(info);\r\n      }\r\n    });\r\n  });\r\n};\r\n",
      "comment": "//[TwoFactorMailNodeMailer]"
    }
  ]
}
