{
  "name": "NewPasswordForm",
  "files": [
    {
      "name": "NewPasswordForm.tsx",
      "content": "\"use client\"import React, { useState, useTransition } from 'react';\nimport { CardWrapper } from '@/components/auth/CardWrapper';\nimport { useForm } from 'react-hook-form';\nimport { NewPasswordSchema } from '@/validations';\nimport * as z from 'zod';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { FormError } from '@/components/auth/FormError';\nimport { FormSuccess } from '@/components/auth/FormSuccess';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useSearchParams } from 'next/navigation';\nimport { resetPasswordWithToken } from '@/actions/auth.actions';\n\nexport const NewPasswordForm = () => {\n  const [error, setError] = useState<string | undefined>('');\n  const [success, setSuccess] = useState<string | undefined>('');\n  const [isPending, startTransition] = useTransition();\n  const searchParams = useSearchParams();\n  const token = searchParams.get('token');\n  const form = useForm<z.infer<typeof NewPasswordSchema>>({\n    resolver: zodResolver(NewPasswordSchema),\n    defaultValues: {\n      password: '',\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof NewPasswordSchema>) {\n    startTransition(() => {\n      resetPasswordWithToken(values, token!).then((res) => {\n        setError(res?.error);\n        setSuccess(res?.success);\n      });\n    });\n  }\n\n  return (\n    <CardWrapper\n      headerLabel='Forgot Your Password?'\n      BackButtonLabel='Back to login'\n      BackButtonHref='/login'\n    >\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className='space-y-8'>\n          <div className='space-y-6'>\n            <FormField\n              control={form.control}\n              name='password'\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>New Password</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder='Your new password'\n                      type='password'\n                      {...field}\n                      disabled={isPending}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n          <FormError message={error} />\n          <FormSuccess message={success} />\n          <Button type='submit' className='w-full' disabled={isPending}>\n            Reset Password\n          </Button>\n        </form>\n      </Form>\n    </CardWrapper>\n  );\n};"
    }
  ],
  "type": "components:auth"
}
