{
  "name": "schema.prisma",
  "files": [
    {
      "name": "schema.prisma",
      "content": "// prisma/schema.prisma\ndatasource db {\n  provider  = \"postgresql\"\n  url    = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nenum UserRole {\n  ADMIN\n  USER\n}\n\nmodel User {\n  id            String    @id @default(cuid())\n  name          String?\n  email         String?   @unique\n  emailVerified DateTime?\n  image         String?\n  password      String?\n  role          UserRole @default(USER)\n  accounts      Account[]\n  isTwoFactorEnabled Boolean @default(false)\n  twoFactorConfirmation TwoFactorConfirmation?\n}\n\nmodel Account {\n  id                 String  @id @default(cuid())\n  userId             String\n  type               String\n  provider           String\n  providerAccountId  String\n  refresh_token      String?  @db.Text\n  access_token       String?  @db.Text\n  expires_at         Int?\n  token_type         String?\n  scope              String?\n  id_token           String?  @db.Text\n  session_state      String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel VerificationToken {\n  id String @id @default(cuid())\n  email String\n  token String @unique\n  expires DateTime\n\n  @@unique([email, token])\n}\n\nmodel PasswordResetToken {\n  id String @id @default(cuid())\n  email String\n  token String @unique\n  expires DateTime\n\n  @@unique([email, token])\n}\n\nmodel TwoFactorToken {\n  id String @id @default(cuid())\n  email String\n  token String @unique\n  expires DateTime\n\n  @@unique([email, token])\n}\n\nmodel TwoFactorConfirmation {\n  id String @id @default(cuid())\n  userId String\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  @@unique([userId])\n} "
    }
  ],
  "type": "prisma"
}
